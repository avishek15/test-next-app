name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to OCI ARM instance
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          echo "$SSH_PRIVATE_KEY" > id_rsa
          chmod 600 id_rsa
          ssh-agent bash -c 'ssh-add id_rsa; ssh -o StrictHostKeyChecking=no $SSH_USER@$SERVER_IP "
            if docker ps -a --filter "name=nextssr-app" | grep -q nextssr-app; then
              docker stop nextssr-app || true && docker rm nextssr-app || true
            fi
            if [ -d /tmp/nextssr-app ]; then
              rm -rf /tmp/nextssr-app
            fi
            git clone https://github.com/$GITHUB_REPOSITORY.git /tmp/nextssr-app
            cd /tmp/nextssr-app
            docker buildx build --platform linux/arm64 -t nextssr-app:latest . --load
            docker run -d --name nextssr-app --restart unless-stopped -p 3000:3000 nextssr-app:latest
          "'
          rm -f id_rsa

      - name: Test deployment
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          curl -f "http://$SERVER_IP:3000" || exit 1
